# Format: class/method/#:class,#:class,... (# is a number or * (wildcard))
#       class               - the class where the command lives
#       method              - the name of the command's method
#       #:class,#:class,... - an ordered list of the number of parameters for the method of type `class`

# Math commands
Sum = commands.MathCommand/sum/[D
Difference = commands.MathCommand/difference/java.lang.Double,java.lang.Double
Product = commands.MathCommand/product/[D
Quotient = commands.MathCommand/quotient/java.lang.Double,java.lang.Double
Remainder = commands.MathCommand/remainder/java.lang.Double,java.lang.Double
Minus = commands.MathCommand/minus/java.lang.Double
Random = commands.MathCommand/random/java.lang.Double
Sine = commands.MathCommand/sine/java.lang.Double
Cosine = commands.MathCommand/cosine/java.lang.Double
Tangent = commands.MathCommand/tangent/java.lang.Double
ArcTangent = commands.MathCommand/arctangent/java.lang.Double
NaturalLog = commands.MathCommand/naturalLog/java.lang.Double
Power = commands.MathCommand/power/java.lang.Double,java.lang.Double
Pi = commands.MathCommand/pi

# Logic commands
LessThan = commands.LogicCommand/less/java.lang.Double,java.lang.Double
GreaterThan = commands.LogicCommand/greater/java.lang.Double,java.lang.Double
Equal = commands.LogicCommand/equal/java.lang.Double,java.lang.Double
NotEqual = commands.LogicCommand/notEqual/java.lang.Double,java.lang.Double
And = commands.LogicCommand/and/java.lang.Double,java.lang.Double
Or = commands.LogicCommand/or/java.lang.Double,java.lang.Double
Not = commands.LogicCommand/not/java.lang.Double

# Control structures
MakeVariable = commands.StoreCommand/storeVariables/backend.FunctionsStore,java.lang.String,[Ljava.lang.String;,[D
Repeat = commands.ControlCommand/repeat/java.lang.Double,[Lapis.Command;
DoTimes = commands.ControlCommand/doTimes/java.lang.Double,[Lapis.Command;
For = commands.ControlCommand/forLoop/java.lang.Double,java.lang.Double,java.lang.Double,[Lapis.Command;
If = commands.ControlCommand/ifStatement/java.lang.Double,[Lapis.Command;
IfElse = commands.ControlCommand/ifStatement/java.lang.Double,[Lapis.Command;
MakeUserInstruction = commands.StoreCommand/storeFunction/java.lang.String,[Lapis.Command;
