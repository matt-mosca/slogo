# Format: CannonicalCommandString = command_node_class

# Math commands
Sum = backend.math_nodes.SumNode
Difference = backend.math_nodes.DifferenceNode
Product = backend.math_nodes.ProductNode
Quotient = backend.math_nodes.QuotientNode
Remainder = backend.math_nodes.RemainderNode
Minus = backend.math_nodes.MinusNode
Random = backend.math_nodes.RandomNode
Sine = backend.math_nodes.SineNode
Cosine = backend.math_nodes.CosineNode
Tangent = backend.math_nodes.TangentNode
ArcTangent = backend.math_nodes.ArctangentNode
NaturalLog = backend.math_nodes.LogNode
Power = backend.math_nodes.PowerNode
Pi = backend.math_nodes.PiNode

# Logic commands
LessThan = backend.logic_nodes.LessNode
GreaterThan = backend.logic_nodes.GreaterNode
Equal = backend.logic_nodes.EqualNode
NotEqual = backend.logic_nodes.NotEqualNode
And = backend.logic_nodes.AndNode
Or = backend.logic_nodes.OrNode
Not = backend.logic_nodes.NotNode

# Control structures
MakeVariable = TODO 
Repeat = backend.control_nodes.RepeatNode
DoTimes = backend.control_nodes.DoTimesNode
For = backend.control_nodes.IterationNode
If = backend.control_nodes.IfNode
IfElse = backend.control_nodes.IfElseNode
MakeUserInstruction = backend.control_nodes.FunctionDefinitonNode
